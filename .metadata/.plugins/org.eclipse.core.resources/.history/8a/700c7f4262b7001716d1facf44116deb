package com.moreti.spring.aop.springaop.aspect;

import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Configuration;

@Aspect
@Configuration
public class MethodExcutionCalculationAspect {

	private Logger logger = LoggerFactory.getLogger(this.getClass());

	 @Around(value =
	 "com.moreti.spring.aop.springaop.aspect.CommonJoinPointConfig.businessLayerExecution()")
	 public void afterReturning(ProceedingJoinPoint joinPoint) throws Throwable {
	 long startTime = System.currentTimeMillis();
	 joinPoint.proceed();
	 long timeTaken = System.currentTimeMillis() - startTime;
	 logger.info("Time taken by {} is {}", joinPoint, timeTaken);
	 }
}
